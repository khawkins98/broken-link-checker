{"version":3,"file":"Link.js","names":["reasons","_interopRequireWildcard","require","_isurl","_interopRequireDefault","_urlRelation","_class","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_classPrivateMethodInitSpec","privateSet","_checkPrivateRedeclaration","add","privateCollection","TypeError","_get","Reflect","bind","target","property","receiver","base","_superPropBase","desc","arguments","length","value","apply","object","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","_classPrivateMethodGet","fn","ORIGINAL_URL","exports","RESOLVED_URL","REBASED_URL","REDIRECTED_URL","RESOLVED_BASE_URL","REBASED_BASE_URL","HTML_INDEX","HTML_OFFSET_INDEX","HTML_LOCATION","HTML_SELECTOR","HTML_TAG_NAME","HTML_ATTR_NAME","HTML_ATTRS","HTML_TEXT","HTML_TAG","HTML_BASE_HREF","HTTP_RESPONSE","HTTP_RESPONSE_WAS_CACHED","IS_BROKEN","IS_INTERNAL","IS_SAME_PAGE","WAS_EXCLUDED","BROKEN_REASON","EXCLUDED_REASON","_relateWithBase","WeakSet","Link","Map","constructor","link","keys","forEach","key","break","reasonKey","include","exclude","mend","redirect","url","parseURL","_relateWithBase2","resolve","isURL","href","hash","rebased","includes","undefined","toJSON","fromEntries","Array","from","entries","relation","URLRelation","upTo","HOST","PATH","URL","freeze"],"sources":["../../lib/internal/Link.js"],"sourcesContent":["import * as reasons from \"./reasons\";\nimport isURL from \"isurl\";\nimport URLRelation from \"url-relation\";\n\n\n\nexport const ORIGINAL_URL = \"originalURL\";      // The URL string as it was inputted\nexport const RESOLVED_URL = \"resolvedURL\";      // The `URL`, resolved with `RESOLVED_BASE_URL`\nexport const REBASED_URL = \"rebasedURL\";        // The `URL`, resolved with `REBASED_BASE_URL`\nexport const REDIRECTED_URL = \"redirectedURL\";  // The `URL`, after its last redirection, if any\n\nexport const RESOLVED_BASE_URL = \"resolvedBaseURL\";  // The base `URL`\nexport const REBASED_BASE_URL = \"rebasedBaseURL\";    // The base `URL`, resolved with `HTML_BASE_HREF`\n\nexport const HTML_INDEX = \"htmlIndex\";               // The order in which the link appeared in its document -- out of all links using max-level tag filter\nexport const HTML_OFFSET_INDEX = \"htmlOffsetIndex\";  // Sequential (gap-free) indices for skipped and unskipped links\nexport const HTML_LOCATION = \"htmlLocation\";         // Source code location of the attribute that the link was found within\nexport const HTML_SELECTOR = \"htmlSelector\";         // CSS selector for element in document\nexport const HTML_TAG_NAME = \"htmlTagName\";          // Tag name that the link was found on\nexport const HTML_ATTR_NAME = \"htmlAttrName\";        // Attribute name that the link was found within\nexport const HTML_ATTRS = \"htmlAttrs\";               // All attributes on the element\nexport const HTML_TEXT = \"htmlText\";                 // TextNodes/innerText of the element\nexport const HTML_TAG = \"htmlTag\";                   // The entire tag string\nexport const HTML_BASE_HREF = \"htmlBaseHref\";        // The document's `<base href>` value\n\nexport const HTTP_RESPONSE = \"httpResponse\";                      // The request response\nexport const HTTP_RESPONSE_WAS_CACHED = \"httpResponseWasCached\";  // If the response was from cache\n\nexport const IS_BROKEN = \"isBroken\";        // If the link was determined to be broken or not\nexport const IS_INTERNAL = \"isInternal\";    // If the link is to the same host as its base/document\nexport const IS_SAME_PAGE = \"isSamePage\";   // If the link is to the same page as its base/document\nexport const WAS_EXCLUDED = \"wasExcluded\";  // If the link was excluded due to any filtering\n\nexport const BROKEN_REASON = \"brokenReason\";      // The reason why the link was considered broken, if it indeed is\nexport const EXCLUDED_REASON = \"excludedReason\";  // The reason why the link was excluded from being checked, if it indeed was\n\n\n\nexport default class Link extends Map\n{\n\t/**\n\t * @param {Link} [link]\n\t */\n\tconstructor(link)\n\t{\n\t\tsuper(link);\n\n\t\tif (!(link instanceof Link))\n\t\t{\n\t\t\t// Default values\n\t\t\tkeys.forEach(key => super.set(key, null));\n\t\t}\n\t}\n\n\n\t/**\n\t * Change state to \"broken\" with a reason.\n\t * @param {string} reasonKey\n\t * @returns {Link}\n\t */\n\tbreak(reasonKey)\n\t{\n\t\tif (!(reasonKey in reasons))\n\t\t{\n\t\t\treasonKey = \"BLC_UNKNOWN\";\n\t\t}\n\n\t\tsuper.set(IS_BROKEN, true);\n\t\tsuper.set(BROKEN_REASON, reasonKey);\n\t\tthis.include();\n\t\treturn this;\n\t}\n\n\n\n\t/**\n\t * Change state to \"excluded\" with a reason.\n\t * @param {string} reasonKey\n\t * @returns {Link}\n\t */\n\texclude(reasonKey)\n\t{\n\t\tsuper.set(WAS_EXCLUDED, true);\n\t\tsuper.set(EXCLUDED_REASON, reasonKey);\n\t\treturn this;\n\t}\n\n\n\n\t/**\n\t * Change state to \"not excluded\" and remove any previous reason for being otherwise.\n\t * @returns {Link}\n\t */\n\tinclude()\n\t{\n\t\tsuper.set(WAS_EXCLUDED, false);\n\t\tsuper.set(EXCLUDED_REASON, null);\n\t\treturn this;\n\t}\n\n\n\n\t/**\n\t * Change state to \"not broken\" and remove any previous reason for being otherwise.\n\t * @returns {Link}\n\t */\n\tmend()\n\t{\n\t\tsuper.set(IS_BROKEN, false);\n\t\tsuper.set(BROKEN_REASON, null);\n\t\tthis.include();\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * Assign a redirected URL and change any relative state.\n\t * @param {URL|string} url\n\t * @returns {Link}\n\t */\n\tredirect(url)\n\t{\n\t\tsuper.set(REDIRECTED_URL, parseURL(url));\n\n\t\tthis.#relateWithBase();\n\t\treturn this;\n\t}\n\n\n\n\t/**\n\t * Reassign properties associated with state relative to the link's environment.\n\t */\n\t#relateWithBase()\n\t{\n\t\tconst url = super.get(REDIRECTED_URL) ?? super.get(REBASED_URL);\n\n\t\t// If impossible to determine is linked to same server/etc\n\t\tif (url===null || super.get(RESOLVED_BASE_URL)===null)\n\t\t{\n\t\t\t// Overwrite any previous values\n\t\t\tsuper.set(IS_INTERNAL, null);\n\t\t\tsuper.set(IS_SAME_PAGE, null);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Rebased base URL not used because `<base href>` URL could be remote\n\t\t\t// @todo common/careful profile\n\t\t\t// @todo auth shouldn't affect this\n\t\t\tconst relation = new URLRelation(url, super.get(RESOLVED_BASE_URL));\n\n\t\t\tsuper.set(IS_INTERNAL,  relation.upTo(URLRelation.HOST));\n\t\t\tsuper.set(IS_SAME_PAGE, relation.upTo(URLRelation.PATH));\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Produce and assign an absolute URL and change any relative state.\n\t * @param {URL|string|null} [url]\n\t * @param {URL|string|null} [base]\n\t * @returns {Link}\n\t */\n\tresolve(url, base)\n\t{\n\t\tif (url != null)\n\t\t{\n\t\t\t// Parse or clone\n\t\t\tbase = parseURL(base);\n\n\t\t\tif (isURL(url))\n\t\t\t{\n\t\t\t\tsuper.set(ORIGINAL_URL, url.href);\n\t\t\t\tsuper.set(RESOLVED_URL, url);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsuper.set(ORIGINAL_URL, url);\n\t\t\t\tsuper.set(RESOLVED_URL, parseURL(url));\n\t\t\t}\n\n\t\t\tif (base !== null)\n\t\t\t{\n\t\t\t\t// Remove any hash since it's useless in a base -- safe to mutate\n\t\t\t\tbase.hash = \"\";\n\n\t\t\t\tconst rebased = parseURL(super.get(HTML_BASE_HREF), base);\n\n\t\t\t\tsuper.set(REBASED_BASE_URL, rebased ?? base);\n\t\t\t\tsuper.set(RESOLVED_BASE_URL, base);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsuper.set(REBASED_BASE_URL, parseURL(super.get(HTML_BASE_HREF)));\n\t\t\t}\n\n\t\t\tif (super.get(REBASED_BASE_URL) !== null)\n\t\t\t{\n\t\t\t\t// Remove any hash since it's useless in a base -- safe to mutate\n\t\t\t\tsuper.get(REBASED_BASE_URL).hash = \"\";\n\n\t\t\t\tif (super.get(RESOLVED_URL) === null)\n\t\t\t\t{\n\t\t\t\t\tsuper.set(RESOLVED_URL, parseURL(url, super.get(RESOLVED_BASE_URL)));\n\t\t\t\t\tsuper.set(REBASED_URL,  parseURL(url, super.get(REBASED_BASE_URL)));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsuper.set(REBASED_URL, super.get(RESOLVED_URL));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsuper.set(REBASED_URL, super.get(RESOLVED_URL));\n\t\t\t}\n\n\t\t\t// @todo move relation stuff out of this function -- separation of concerns?\n\t\t\tthis.#relateWithBase();\n\t\t}\n\n\t\treturn this;\n\t}\n\n\n\n\t/**\n\t * Assign a value to a supported key.\n\t * @param {symbol} key\n\t * @param {*} value\n\t * @throws {TypeError} unsupported key or undefined value\n\t * @returns {Link}\n\t */\n\tset(key, value)\n\t{\n\t\tif (!keys.includes(key))\n\t\t{\n\t\t\tthrow new TypeError(\"Invalid key\");\n\t\t}\n\t\telse if (value === undefined)\n\t\t{\n\t\t\tthrow new TypeError(\"Invalid value\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn super.set(key, value);\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Produce a key-value object for `JSON.stringify()`.\n\t * @returns {object}\n\t */\n\ttoJSON()\n\t{\n\t\t// @todo https://github.com/tc39/proposal-pipeline-operator\n\t\treturn Object.fromEntries(Array.from(super.entries()));\n\t}\n}\n\n\n\nconst keys =\n[\n\tBROKEN_REASON,\n\tEXCLUDED_REASON,\n\tHTML_ATTR_NAME,\n\tHTML_ATTRS,\n\tHTML_BASE_HREF,\n\tHTML_INDEX,\n\tHTML_LOCATION,\n\tHTML_OFFSET_INDEX,\n\tHTML_SELECTOR,\n\tHTML_TAG,\n\tHTML_TAG_NAME,\n\tHTML_TEXT,\n\tHTTP_RESPONSE,\n\tHTTP_RESPONSE_WAS_CACHED,\n\tIS_BROKEN,\n\tIS_INTERNAL,\n\tIS_SAME_PAGE,\n\tORIGINAL_URL,\n\tREBASED_BASE_URL,\n\tREBASED_URL,\n\tREDIRECTED_URL,\n\tRESOLVED_BASE_URL,\n\tRESOLVED_URL,\n\tWAS_EXCLUDED\n];\n\n\n\n/**\n * Parse or clone a URL.\n * @param {URL|string|null} [url]\n * @param {URL|string|null} [base]\n * @returns {URL|null}\n */\nconst parseURL = (url=null, base) =>\n{\n\tif (url !== null)\n\t{\n\t\ttry\n\t\t{\n\t\t\turl = new URL(url, base);\n\t\t}\n\t\tcatch\n\t\t{\n\t\t\turl = null;\n\t\t}\n\t}\n\n\treturn url;\n};\n\n\n\nObject.freeze(Link);\n"],"mappings":"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"}